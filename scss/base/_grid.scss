@import "../abstract/_all.scss";


//   -CONTAINERS        
 
.container {
    padding-right: $padding-global;
    padding-left: $padding-global;
    margin-right: auto;
    margin-left: auto;
    position: relative;
    max-width: $container;
    @media (min-width: $break-sm) {
 
        padding-right: $padding-global;
        padding-left: $padding-global;
        width: 90%;
        max-width: nth(map-values($breakpoints), 2);
    }
    @media (min-width: $break-md) {
  
        width: 80%;
        max-width: nth(map-values($breakpoints), 3);
    }
    @media (min-width: $break-lg) {
  
        width: 80%;
        max-width: nth(map-values($breakpoints), 4);
    }
}
.container-full {
    padding-right: $padding-global;
    padding-left: $padding-global;
    margin-right: auto;
    margin-left: auto;
    position: relative;
    max-width: $container;
    @media (min-width: $break-sm) {

        padding-right: $padding-global;
        padding-left: $padding-global;
        width: 90%;
        max-width: nth(map-values($breakpoints), 2);
    }
    @media (min-width: $break-md) {
 
        width: 80%;
        max-width: nth(map-values($breakpoints), 3);
    }
    @media (min-width: $break-lg) {

        width: 80%;
        max-width: nth(map-values($breakpoints), 4);
    }
}
.container-fluid {
    padding-right: $padding-global;
    padding-left: $padding-global;
    margin-right: auto;
    margin-left: auto;
    position: relative;
}
.container-2 {
    padding-right: $padding-global;
    padding-left: $padding-global;
    margin-right: auto;
    margin-left: auto;
    position: relative;
    width: 90%;
    max-width: $container-2;
}
.container-3 {
    padding-right: $padding-global * 3;
    padding-left: $padding-global * 3;
    margin-right: auto;
    margin-left: auto;
    position: relative;
    width: 100%;
    max-width: $container-3;
    @media (min-width: $break-sm) {
        padding-right: $padding-global ;
        padding-left: $padding-global ;
    }
}
.container-4 {
    padding-right: $padding-global;
    padding-left: $padding-global;
    margin-right: auto;
    margin-left: auto;
    position: relative;
    width: 90%;
    max-width: $container-4;
}
// join life style
.container-5 {
    position: relative;
    padding: 0 $padding-global;
    margin: 0 auto;
    width: 100%;
    max-width: $container-5;
    @media (min-width: $break-sm) {
        max-width: $container;
    }
    @media (min-width: $break-lg) {
        max-width: 1000px;
        padding: 0;
    }
}
.container-6 {
    margin: 0 auto;
    padding: 0 $padding-global;
    width: 100%;
    max-width: $container-6;
}
.container-7 {
    margin: 0 auto;
    padding: 0 $padding-global * 2;
    width: 100%;
    max-width: 295px;
    @media (min-width: $break-sm) {
        max-width: 460px;
        padding-right: $padding-global;
        padding-left: $padding-global;
    }
    @media (min-width: $break-md) {
        max-width: 460px;
    }
    @media (min-width: $break-lg) {
        max-width: 595px;
    }
}
.container-8 {
    margin: 0 auto;
    padding: 0 $padding-global;
    width: 100%;
    max-width: $container-8;
}

.container-9 {
    margin: 0 auto;
    padding: 0  $padding-mobile;
    width: 100%;
    max-width: $container-9;
    @media (min-width: $break-sm) {
        padding: 0 $padding-global;
    }
}
.container-body {
    padding: 16px;
    @media (min-width: $break-sm) {
        padding: 24px;
    }
    @media (min-width: $break-lg) {
        padding: 32px;
    }
}

  //   -ROW        
   
.row {
    display: flex;
    flex-wrap: wrap;
    margin-right: -$padding-global;
    margin-left: -$padding-global;
    @for $i from 2 through length($breakpointscols) {
        @media (min-width: nth(map-values($breakpointscols), $i)) {
            margin-right: -$padding-global;
            margin-left: -$padding-global;
        }
    }
}

  //   -COLS        
   
@for $i from 1 through $colBreakpointscols {
    @media (min-width: nth(map-values($breakpointscols), $i)) {
        @for $c from 1 through $totalCols {
            .col-#{nth(map-keys($breakpointscols), $i)}-#{$c} {
                -webkit-box-flex: 0;
                flex: 0 0 percentage($c / $totalCols);
                max-width: percentage($c / $totalCols);
            }
        }
    }
}
[class*="col-"] {
    box-sizing: border-box;
    position: relative;
    min-height: 1px;
    padding-right: $padding-global;
    padding-left: $padding-global;
}
.col {
    display: block;
    flex-basis: 0;
    flex-grow: 1;
    flex-shrink: 1;
    padding: 0 $padding-global;
}
.col-sm {
    @media (min-width: $break-sm) {
        display: block;
        flex-basis: 0;
        flex-grow: 1;
        flex-shrink: 1;
        padding: 0 $padding-global;
    }
}
.col-md {
    @media (min-width: $break-sm) {
        display: block;
        flex-basis: 0;
        flex-grow: 1;
        flex-shrink: 1;
        padding: 0 $padding-global;
    }
}
.col-lg {
    @media (min-width: $break-sm) {
        display: block;
        flex-basis: 0;
        flex-grow: 1;
        flex-shrink: 1;
        padding: 0 $padding-global;
    }
}
.bleed {
    margin-left: -$padding-global;
    margin-right: -$padding-global;
    width: auto;
}
@include bleed(0);
@include bleed(4);
@include bleed(8);


